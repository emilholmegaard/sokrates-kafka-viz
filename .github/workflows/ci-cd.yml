name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
    
    services:
      zookeeper:
        image: wurstmeister/zookeeper
        ports:
          - 2181:2181

      kafka:
        image: wurstmeister/kafka:2.13-2.6.0
        ports:
          - 9092:9092
        env:
          KAFKA_ADVERTISED_HOST_NAME: localhost
          KAFKA_ZOOKEEPER_CONNECT: localhost:2181
          KAFKA_CREATE_TOPICS: "test:1:1"
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ --cov=kafka_viz --cov-report=xml --cov-report=term-missing
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        
    - name: Type checking
      run: |
        mypy kafka_viz --ignore-missing-imports
        
    - name: Lint
      run: |
        black --check kafka_viz
        isort --check-only kafka_viz 
        flake8 kafka_viz --max-line-length=100

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel
        
    - name: Build package
      run: |
        python -m build
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
